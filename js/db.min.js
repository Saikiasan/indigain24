const DB_NAME="SaikiaCodes_2024",DB_VERSION=1,STORE_NAME="items";function openDatabase(){const e=$.Deferred(),t=indexedDB.open(DB_NAME,1);return t.onupgradeneeded=function(e){const t=e.target.result;t.objectStoreNames.contains("items")||t.createObjectStore("items",{keyPath:"id",autoIncrement:!0})},t.onsuccess=function(t){e.resolve(t.target.result)},t.onerror=function(){e.reject("Database failed to open")},e.promise()}function addItem(e){const t=$.Deferred();return openDatabase().done((function(n){const o=n.transaction("items","readwrite");o.objectStore("items").add(e),o.oncomplete=function(){t.resolve("Item added successfully")},o.onerror=function(){t.reject("Failed to add item")}})).fail((function(e){t.reject("Failed to add item: "+e)})),t.promise()}function getItems(){const e=$.Deferred();return openDatabase().done((function(t){const n=t.transaction("items","readonly").objectStore("items").getAll();n.onsuccess=function(){e.resolve(n.result||[])},n.onerror=function(){e.reject("Failed to retrieve items")}})).fail((function(t){e.reject("Failed to retrieve items: "+t)})),e.promise()}function deleteItem(e){const t=$.Deferred();return openDatabase().done((function(n){const o=n.transaction("items","readwrite").objectStore("items").delete(e);o.onsuccess=function(){t.resolve("Item deleted successfully")},o.onerror=function(){t.reject("Failed to delete item")}})).fail((function(e){t.reject("Failed to delete item: "+e)})),t.promise()}function updateCartCount(){getItems().done((function(e){const t=e.length;$("#cart-count").text(t)})).fail((function(e){}))}$(document).ready((function(){updateCartCount()}));